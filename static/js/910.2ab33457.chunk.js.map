{"version":3,"file":"static/js/910.2ab33457.chunk.js","mappings":"+SAEO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IACrB,iIAHC,uBAEKC,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAEoBL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,6DAFpB,uBAEKJ,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,kGAEoBL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,qEAFpB,uBAEKJ,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA6BF,GAA7B,kGAEoBL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,qEAFpB,uBAEKJ,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kGAEoBT,EAAAA,EAAAA,IAAA,6IACiHS,IAHrI,uBAEKR,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gF,yFC7CP,EAA4B,0BAA5B,EAAoE,4BAApE,EAA4G,0BAA5G,EAAkJ,0B,mCCOnI,SAASO,IAAU,IAAD,EAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOF,EAAP,KAAcG,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,uBAApB,QAAuC,GAC7CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,IAILV,EAAAA,EAAAA,IAAgBU,GAAQK,MAAK,SAAAtB,GAAI,OAAIa,EAAUb,EAAKuB,QAAnB,GAClC,GAAE,CAACN,IAeJ,OACE,iCACE,kBAAMO,SAfY,SAAAC,GACpBA,EAAMC,iBACDlB,GAILQ,EAAgB,CAAEW,aAAcnB,GACjC,EAQG,WACE,kBACEoB,YAAY,2BACZC,UAAWC,EACXC,KAAK,OACLC,MAAOxB,EACPyB,SAZa,SAAAR,GACnBd,EAASc,EAAMS,OAAOF,MACvB,KAYK,mBAAQH,UAAWC,EAAeC,KAAK,SAAvC,wBAIF,eAAIF,UAAWC,EAAf,SACGlB,EAAOuB,KAAI,SAAAC,GACV,OACE,yBACE,UAAC,KAAD,CACEC,GAAE,UAAKD,EAAME,IACbC,MAAO,CAAEC,KAAMrB,GACfU,UAAWC,EAHb,WAKE,gBACEW,IACEL,EAAMM,aAAN,yCACkCN,EAAMM,aAE1CC,IAAG,UAAKP,EAAMQ,gBACdC,MAAM,WAER,8BAAMT,EAAMQ,sBAdPR,EAAME,GAkBlB,QAIR,C","sources":["components/helpers/api.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchFilms() {\n  try {\n    const { data } = await axios.get(\n      'https://api.themoviedb.org/3/movie/popular?api_key=b22eeaf20157945591c68d8a5e58dd30&language=en-US&page=1&include_adult=false'\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=b22eeaf20157945591c68d8a5e58dd30&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchReviewsById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=b22eeaf20157945591c68d8a5e58dd30&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchCastById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=b22eeaf20157945591c68d8a5e58dd30&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchQueryFilms(query) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=b22eeaf20157945591c68d8a5e58dd30&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchBar\":\"Movies_searchBar__7rhTU\",\"movies_list\":\"Movies_movies_list__6BEzF\",\"btnSubmit\":\"Movies_btnSubmit__DsGSE\",\"link_list\":\"Movies_link_list__ZkMFk\"};","import React from 'react';\n\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport css from '../Movies/Movies.module.css';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchQueryFilms } from 'components/helpers/api';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const adress = searchParams.get('resultSearch') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!adress) {\n      return;\n    }\n\n    fetchQueryFilms(adress).then(data => setMovies(data.results));\n  }, [adress]);\n\n  const OnInputSubmit = event => {\n    event.preventDefault();\n    if (!query) {\n      return;\n    }\n\n    setSearchParams({ resultSearch: query });\n  };\n\n  const onInputValue = event => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={OnInputSubmit}>\n        <input\n          placeholder=\"Search images and photos\"\n          className={css.searchBar}\n          type=\"text\"\n          value={query}\n          onChange={onInputValue}\n        />\n        <button className={css.btnSubmit} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <ul className={css.movies_list}>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link\n                to={`${movie.id}`}\n                state={{ from: location }}\n                className={css.link_list}\n              >\n                <img\n                  src={\n                    movie.poster_path &&\n                    `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  }\n                  alt={`${movie.original_title}`}\n                  width=\"200px\"\n                />\n                <h3> {movie.original_title}</h3>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n"],"names":["fetchFilms","axios","data","console","error","fetchMovieById","movieId","fetchReviewsById","fetchCastById","fetchQueryFilms","query","Movies","useState","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","adress","get","location","useLocation","useEffect","then","results","onSubmit","event","preventDefault","resultSearch","placeholder","className","css","type","value","onChange","target","map","movie","to","id","state","from","src","poster_path","alt","original_title","width"],"sourceRoot":""}